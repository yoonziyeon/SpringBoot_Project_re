<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Member"> <!-- 매퍼네임스페이스명을 Member 로 지정 -->

    <!-- 아이디 중복검색 -->
    <select id="m_idcheck" parameterType="java.lang.String" resultType="member">
      <!-- parameterType은 전달인자 타입속성이고 생략가능함, resultType은 반환타입 속성이고 생략불가 -->
      select * from member where mem_id=#{id}
    </select>
    
    <!-- 우편주소 검색 -->
    <select id="zip_List" resultType="zipcode">
      select * from zipcode where dong like #{dong}    
    </select>
    
    <!-- 회원저장 -->
    <insert id="mem_in">
      insert into member (mem_id,mem_pwd,mem_name,mem_zip,mem_zip2,mem_addr,mem_addr2,
      mem_phone01,mem_phone02,mem_phone03,mail_id,mail_domain,mem_state,mem_date)
      values(#{mem_id},#{mem_pwd},#{mem_name},#{mem_zip},#{mem_zip2},#{mem_addr},#{mem_addr2},
      #{mem_phone01}, #{mem_phone02}, #{mem_phone03}, #{mail_id}, #{mail_domain}, 1, sysdate)      
    </insert>
    
    <!-- 아이디와 회원이름을 기준으로 비번을 검색 -->
    <select id="p_find" resultType="net.daum.vo.MemberVO">
      select * from member where mem_id = #{mem_id} and mem_name = #{mem_name}
    </select>
    
    <!-- 암호화 된 임시비번으로 수정 -->
    <update id="p_edit" parameterType="member">
      update member set mem_pwd=#{mem_pwd} where mem_id=#{mem_id}
      <!-- #{mem_pwd}를 자바코드로 표현하면 member.getMem_pwd()와 같은 기능을 한다. -->
    </update>
    
    <!-- 로그인 인증처리 -->
    <select id="m_loginCheck" resultType="member">
       select * from  member where mem_id=#{login_id} and mem_state=1 
    </select>
    
    <!-- 회원정보 보기 -->
    <select id="m_info" resultType="member">
       select * from member where mem_id=#{id}
    </select>
    
    <!-- 정보수정 -->
    <update id="medit_ok">
       update member set mem_pwd=#{mem_pwd},mem_name=#{mem_name}, mem_zip=#{mem_zip},
       mem_zip2=#{mem_zip2},mem_addr=#{mem_addr},mem_addr2=#{mem_addr2},
       mem_phone01=#{mem_phone01},mem_phone02=#{mem_phone02},mem_phone03=#{mem_phone03},
       mail_id=#{mail_id},mail_domain=#{mail_domain} where mem_id=#{mem_id}
    </update>
    
    <!-- 회원탈퇴 -->
    <update id="mDel_ok">
       update member set mem_delcont=#{mem_delcont},mem_state=2,mem_deldate=sysdate
       where mem_id=#{mem_id}
    </update>
</mapper>







